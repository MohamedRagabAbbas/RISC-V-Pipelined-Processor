module moore(input clk, rst, w, output z);
    
    // w = transition
    // z = output

    // reg and param should have same correct bits 
    // if using case stat, if else and else if don't execute
    // write, else = samestate
    
    reg [1:0] state, nextState;
    parameter [1:0] Z = 2'b00, E = 2'b01, O = 2'b10;
    
    always @ (level or state) begin
        case (state)
            Z: if (w == 0) nextState = Z;
            else nextState = E;
            E: if (w == 0) nextState = Z;
            else nextState = O;
            O: if (w == 0) nextState = Z;
            else nextState = O;
            default: nextState = Z;
        endcase
    end
    
    always @ (posedge clk) begin //or posedge rst
    //if(rst) state <= A;
    //else
        state <= nextState;
    end
    
    assign z = (state == E);
    
endmodule