module mealy(input clk, rst, w, output reg z);
    
    // reg and param should have same correct bits
    
    reg [1:0] state, nextState;
    reg nextOut;
    parameter [1:0] A = 2'b00, B = 2'b01, C = 2'b10;  
    
    // if using case stat, if else and else if don't execute
    // write, else = samestate
    
    // combinational logic
    always @ (state or w) begin
        // type all cases here
         if(state == A && w == 1) begin
             nextOut = 0;
             nextState = B;
         end
         else if(state == B && w == 0) begin
             nextOut = 0;
             nextState = C;
         end
         else if(state == B && w == 1) begin
             nextOut = 0;
             nextState = B;
         end
         else if(state == C && w == 1) begin
             nextOut = 1;
             nextState = B;
         end
         else begin         // default case
             nextOut = 0;
             nextState = A;
         end
     end
    
    // sequential logic
    always @ (posedge clk or posedge rst) begin
        if(rst) state <= A;
        else begin
            state <= nextState;
            z <= nextOut;
        end
    end
    
endmodule